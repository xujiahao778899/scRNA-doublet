import scrublet as scr
import scipy.io
import matplotlib.pyplot as plt
import numpy as np
import os

plt.rcParams['font.family'] = 'sans-serif'
plt.rcParams['font.sans-serif'] = 'Arial'
plt.rc('font', size=14)
plt.rcParams['pdf.fonttype'] = 42


infile = "C:/Users/19617/Desktop/ATAC_count.txt"
outfile = "C:/Users/19617/Desktop/Scrublet_ATAC_result.txt"

finallist = []
with open(infile, 'r') as f:
     header = next(f)
     cell_barcodes = header.rstrip().split('\t')
     for line in f:
        tmpline = line.rstrip().split('\t')[1: ]
        tmplist = [int(s) for s in tmpline]
        finallist.append(tmplist)

finalarray = np.array(finallist)
count_matrix = np.transpose(finalarray)
scrub =scr.Scrublet(count_matrix, expected_doublet_rate = 0.036)
doublet_scores, predicted_doublets = scrub.scrub_doublets()
predicted_doublets_final = scrub.call_doublets(threshold = 0.16)
scrub.plot_histogram()


print('Running UMAP...')
scrub.set_embedding('UMAP', scr.get_umap(scrub.manifold_obs_, 10, min_dist=0.3))
print('Done.')
scrub.plot_embedding('UMAP', order_points=True)

plt.show()

with open(outfile, 'w') as f:
     f.write('\t'.join(['CB', 'Scrublet', 'Scrublet_Score']) + '\n')
     for i in range(len(doublet_scores)):
        if predicted_doublets_final[i] == 0:
            result = 'Singlet'
        else:
            result = 'Doublet'
        f.write('\t'.join([cell_barcodes[i+1], result, str(doublet_scores[i])]) + '\n')
